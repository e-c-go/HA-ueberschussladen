blueprint:
  name: Test Wallbox Steuerung (Minimal)
  description: >
    Einfache Steuerung des Ladestroms basierend auf PV-Überschuss und Netzeinspeisung.
  domain: automation
  homeassistant:
    min_version: "2023.12.0"

  input:
    charger_current:
      name: Aktueller Ladestrom (A)
      selector:
        entity:
          domain: number
    pv_power:
      name: PV-Leistung (W)
      selector:
        entity:
          domain: sensor
          device_class: power
    house_consumption:
      name: Hausverbrauch (W)
      selector:
        entity:
          domain: sensor
          device_class: power
    net_power:
      name: Netzeinspeisung/-bezug (W)
      description: Falls nicht genutzt, lasse dieses Feld leer.
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: power
    min_charge_current:
      name: Minimaler Ladestrom (A)
      default: 6
      selector:
        number:
          min: 0
          max: 10
          mode: slider
          step: 1
    max_charge_current:
      name: Maximaler Ladestrom (A)
      default: 16
      selector:
        number:
          min: 6
          max: 32
          mode: slider
          step: 1

trigger:
  - platform: time_pattern
    seconds: "/30"

action:
  - service: number.set_value
    target:
      entity_id: !input charger_current
    data:
      value: >
        {% set pv_power = states(!input pv_power) | float(0) %}
        {% set house_consumption = states(!input house_consumption) | float(0) %}
        {% set net_power = states(!input net_power) | float(0) if !input net_power else None %}
        {% set conversion_factor = 219 %}

        {# Falls Netzeinspeisung verfügbar ist, diese nutzen, sonst PV-Überschuss #}
        {% if net_power is not none %}
          {% set available_power = net_power %}
        {% else %}
          {% set available_power = pv_power - house_consumption %}
        {% endif %}

        {# Ladestrom berechnen #}
        {% set new_current = (available_power / conversion_factor) | round(0) %}
        {% set min_current = !input min_charge_current | int %}
        {% set max_current = !input max_charge_current | int %}

        {% if new_current > max_current %}
          {{ max_current }}
        {% elif new_current < min_current %}
          {{ min_current }}
        {% else %}
          {{ new_current }}
        {% endif %}
